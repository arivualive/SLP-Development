<?php

namespace QuestionBundle\Repository;

/**
 * Reponse_thematiqueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Reponse_thematiqueRepository extends \Doctrine\ORM\EntityRepository
{

    //requete pour theme Quoi
       public function getQuoi($userslp) {
       $result = $this->createQueryBuilder('r')
                ->select('COUNT(r.manger) AS nbQuestion, SUM(r.value) AS totValue')
                ->Where('r.userSlp = :userSlp')
                ->setParameter('userSlp', $userslp)
                ->getQuery()
                ->getScalarResult();

            return $result; 
    }
    
    
    
    //requete pour theme OU
    public function getOu($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 66 and r.manger <= 75 ')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }
    //requete pour theme Comment
    public function getComment($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 76 and r.manger <= 103')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }
    //requete pour theme Condition
    public function getCondition($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 104 and r.manger <= 116')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }
    //requete pour theme Dechet
    public function getDechet($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 117 and r.manger <= 133')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }
    //requete pour theme Comportement/sante/alimentaire
    public function getTrouble($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 134 and r.manger <= 152')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }          

                                
    //requete pour theme Inconscient
    public function getInconscient($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 153 and r.manger <= 161')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    } 
    
    //requete pour theme Allergies                       
    public function getAllergies($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 162 and r.manger <= 192')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    } 
    
    //requete pour theme Regimes
     public function getRegimes($userslp){
        return $this->createQueryBuilder('r')
                        ->select('SUM(r.value)')
                        ->join('r.userSlp', 'u')
                        ->where('r.userSlp = :userSlp')
                        ->andWhere('r.manger >= 192 and r.manger <= 201')
                        ->setParameter('userSlp', $userslp) 
                        ->getQuery()
                        ->getSingleScalarResult();

    }


    /*
    public function getTotalNumberAnswer(){

        $entityManager = $this->getEntityManager();
        $query = $entityManager->createQuery(
            'SELECT COUNT(r)
        FROM QuestionBundle\Entity\Reponse_thematique r
        WHERE r.id=5'
        );


        // returns an array of Product objects
        return $query->execute();
    }

    */


    public function getUser($userslp){

        $entityManager = $this->getEntityManager();
        $qb = $entityManager->createQueryBuilder();
        $qb->select('count(u.userSlp)');
        $qb->from('QuestionBundle:Reponse_thematique','u');
        $qb->where('u.userSlp = :idUser');
        $qb->setParameter('idUser',$userslp);

        return $qb->getQuery()->getSingleScalarResult();
    }
                               
}